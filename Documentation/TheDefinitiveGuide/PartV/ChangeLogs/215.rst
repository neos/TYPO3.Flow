====================
2.1.5
====================

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Base Distribution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Eel
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Flow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[TASK] Update references in documentation
-----------------------------------------------------------------------------------------

See https://jenkins.neos.io/job/typo3-flow-release/54/

* Commit: `a10aa93 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/a10aa9339816813f007fd0e3f1674b7bced48c68>`_

Revert "[BUGFIX] ObjectArray should use TypeHandling::getTypeForValue"
-----------------------------------------------------------------------------------------

This reverts commit 26a0a4014f9a0797888802c984ed7745a2093413.

* Commit: `ba0642e <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/ba0642edd67267af994a05b81244eddae5def36f>`_

[BUGFIX] ObjectArray should use TypeHandling::getTypeForValue
-----------------------------------------------------------------------------------------

ObjectArray used get_class() to get the type of given $value. This
change changes that to using TypeHandling::getTypeForValue.

This fixes problems where for example class names of doctrine
proxies are used instead of the entity class name.

Resolves: FLOW-206

* Commit: `26a0a40 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/26a0a4014f9a0797888802c984ed7745a2093413>`_

[BUGFIX] Make rewriteFilenameForUri handle non-ASCII names correctly
-----------------------------------------------------------------------------------------

When the filename consists completely of non-ASCII characters,
the ``rewriteFilenameForUri`` would substitute it with empty filename
like ".jpg", resulting in a broken resource link.

This change makes ``rewriteFilenameForUri`` accept unicode character.
In addition it checks if the filename is empty after the rewrite and
names it "unnamed.<fileExtension>" if needed.

Fixes: FLOW-99

* Commit: `2f964c9 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/2f964c90a7714a05d05efc534a2042e144949e58>`_

[BUGFIX] Safeguard against undefined index
-----------------------------------------------------------------------------------------

The methods shutdown() and warmup() use an index that may not be
defined. This is the case e.g. immediately after the configuration
cache has been flushed.

This change adds a check for the first level of the tested path in the
internal configuration array.

Fixes: FLOW-310

* Commit: `1e10037 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/1e1003755d37f5fecf423efbd7f70665b9a44d60>`_

[BUGFIX] 1st level cache for ``QueryResult::count()``
-----------------------------------------------------------------------------------------

Counting the results of the ``QueryResultInterface`` proxy that is
returned by Repository finder methods always executed a ``COUNT query``,
even if the results have been fetched or counted already.

With this patch the number of results is cached as soon as the
result is initialized and/or counted once.

Fixes: FLOW-326

* Commit: `cb3d400 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/cb3d400988f4afe7a6bd1ccadaaf1d6b7e43254b>`_

[BUGFIX] Accept incoming HTTPS headers
-----------------------------------------------------------------------------------------

This removes a check from ``Http\\Headers`` that prevented any header
starting with "HTTP".

Background:
A recent version of Google Chrome seems to send a ``HTTPS`` header
for requests via SSL (see
https://code.google.com/p/chromium/issues/detail?id=501095).
This header translates to ``$_SERVER['HTTP_HTTPS']`` which triggered
the exception.

Fixes: FLOW-324

* Commit: `9aaf80a <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/9aaf80a5d66ddd0f31b97a7c9c760ca455ea112d>`_

[BUGFIX] Make ``resource://`` URIs work with 40 character Package Keys
-----------------------------------------------------------------------------------------

The Flow ``ResourceStreamWrapper`` transparently handles resource URLs
in the formats ``resource://<SHA1>`` (referring to the SHA1 hash of a
Flow Resource) and ``resource://Package.Key/some/path`` (referring to
a local file path relative to the specified package's Resources
directory).

Currently the detection of a SHA1 hash is unreliably only checking for
the string length being 40 characters. If a Package Key happens to be
exactly 40 characters long, static resources can't be loaded.
This change fixes the issue by replacing the ``strlen`` check with a
simple regular expression lookup that only accepts valid SHA1 hashes.

Fixes: FLOW-250

* Commit: `258d6fb <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/258d6fbcf94e156e321c64cff82babd95c44e225>`_

[BUGFIX] Fix warning about undefined index in Autowiring
-----------------------------------------------------------------------------------------

The Autowiring annotation did not check the existence the existence of
the value key, leading to a warning, followed by an exception, when
the annotation was used like::

  Autowiring(enable=false)

instead of::

  Autowiring(false)

and the ReflectionService was asked for reflection data on such a class.

The same problem could affect Proxy annotation, so it is fixed as well.

* Commit: `6d62053 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/6d62053946cbf00bf41e2343d3d4a9ce71967bdf>`_

[TASK] Fix PDF rendering errors
-----------------------------------------------------------------------------------------

* Commit: `aad9159 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/aad9159222090f8a8c270befd47370f5d45535fc>`_

[TASK] Fix rST rendering warnings
-----------------------------------------------------------------------------------------

* Commit: `30e629d <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/30e629d154b74455b43fb5c7cb44ac5b8ce951d2>`_

[TASK] Show version and release in front matter
-----------------------------------------------------------------------------------------

* Commit: `459f18e <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/459f18e487643ded2d690dc33b30035ce2b613fb>`_

[TASK] Simplify appendix TOC generation
-----------------------------------------------------------------------------------------

* Commit: `5847dad <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/5847dad9ec7a7c8ae8293befcaf5ede3e2d37d83>`_

[TASK] Rename Index.rst to index.rst
-----------------------------------------------------------------------------------------

This is our workaround for an issue with rtfd.org so the documentation
can be browsed when it has been rendered there.

(See https://github.com/rtfd/readthedocs.org/issues/1279 for details.)

* Commit: `ee9316d <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/ee9316d7c69cc90209ec077db4e456c4b49b5da0>`_

[TASK] Switch to plain Sphinx build configuration
-----------------------------------------------------------------------------------------

Switches to a more standard setup for rendering rST using Sphinx. A
simple ``make html`` renders the documentation, if sphinx is installed.

The ``conf.py`` contains a tweak to allow using the RTD theme without
confusing the renderer over at RDT itself.

* Commit: `783d9e5 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/783d9e527108e175bd759487e88c64fc29e9f961>`_

[BUGFIX] Support serialization of classes with static properties
-----------------------------------------------------------------------------------------

When trying to serialize a proxied class that contains static
properties an exception is thrown::

  Runtime Notice: Accessing static property [...] as non static

The reason is that the ``DependencyInjection\\\\ProxyClassBuilder``
overrides the magic ``__sleep()`` method of the proxy class, accessing
all properties as ``$this->\\$propertyName``.

This change fixes the issue by skipping static properties.

Fixes: FLOW-282

* Commit: `f67adee <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/f67adee92d78edb6dfab740dc28c431173d46d20>`_

[BUGFIX] Properly resolve case of Subpackage Key in ActionRequest
-----------------------------------------------------------------------------------------

``ActionRequest::getControllerSubpackageKey()`` failed to return the
correctly cased subpackage key.
This is not the case for the other ``getController*()`` getters and
can lead to issues (e.g. "Template could not be loaded" Fluid
exceptions on case-sensitive file systems.

This change adjusts the ``getControllerSubpackageKey()`` method to
``getControllerName()`` which already uses the correctly cased
controllerObjectName to extract the controller name.

Fixes: FLOW-126

* Commit: `43d3ebf <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/43d3ebfea4ec50f87d6cb51d9a0d9b3004ef67b7>`_

[BUGFIX] Start session when fetching a CSRF token
-----------------------------------------------------------------------------------------

This change adds a ``@Flow\\Session(autoStart=true)`` annotation to the
method ``Security\\Context::getCsrfProtectionToken()``.

Background:

Currently ``CSRF`` tokens are bound to a session. Thus fetching a token
without starting a session makes no sense because the token will be
invalid on the next request.

In the long run we might be able to create "stateless" CSRF tokens that
don't require a session.

Related: FLOW-130

Depends: I896f6a722445deede1f0a656ea73db04f0d2e978

* Commit: `e015570 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/e015570ebd0baf0c6cc8967305724c8762214e8f>`_

[BUGFIX] Move variable initialisation to where it is needed
-----------------------------------------------------------------------------------------

* Commit: `0942b3b <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/0942b3b114231ae8be781503811ebe08cd9b8338>`_

[BUGFIX] Throw exception when trying to reflect a non-existing class
-----------------------------------------------------------------------------------------

Previously the ``ReflectionService`` ignored classes that couldn't be
loaded. It just logged an error and marked the respective class
"unconfigurable".
This leads to weird side effects that are hard to track down.

With this change an exception is thrown during compile time whenever
a class is being reflected that couldn't be loaded.

If a class or file should be skipped during reflection, the
``excludeClasses`` can be used::

  TYPO3:
    Flow:
      object:
        excludeClasses:
          'Some.PackageKey': ['Some\\\\Class\\\\Name']

Fixes: FLOW-128

* Commit: `13ed99c <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/13ed99cb8787882ac61ad38b2bb5be39df1a0843>`_

[BUGFIX] Package meta data do not contain package type.
-----------------------------------------------------------------------------------------

When loading packages using the PackageManager class, the associated
MetaData instance is not initialized with the package type.

* Commit: `56ef67f <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/56ef67f70512220ff27121fb56a69dc47b7272c1>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Fluid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[BUGFIX] Render Form CSRF token field only if authenticated
-----------------------------------------------------------------------------------------

Currently ``CSRF`` tokens are only enforced if an account is
authenticated. But the form ViewHelper rendered the corresponding
hidden field for all forms with method != "GET".

Background:

Rendering the hidden field did not have a side effect before but as
CSRF tokens only make sense with an active session,
``Security\\Context::getCsrfProtectionToken()`` will be adjusted to start
a session when called. Therefore the token should only be fetched if it's
really required.

Related: FLOW-130

* Commit: `2aacf2e <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/2aacf2ead17f3b1f17bb4fc48b7439829ed2872f>`_

[BUGFIX] Support for ViewHelper usage within layout tags
-----------------------------------------------------------------------------------------

Previously, when using ViewHelpers in the ``name`` argument of the
``<f:layout />`` tag, the TemplateCompiler threw an exception
``Notice: Undefined variable: self...`` when rendering the *compiled*
template.

This change fixes this by adding the respective initialization code
before the closure that makes use of ``$self``.

* Fixes: `#45735 <http://forge.typo3.org/issues/45735>`_
* Commit: `7a06d52 <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/7a06d5252f4ab38751a467bd7fa75cff45b2b003>`_

[BUGFIX] Only count items in ForViewHelper when ``iteration`` argument is set
-----------------------------------------------------------------------------------------

When using the ``iteration`` argument, the ``ForViewHelper`` provides
information about the current iteration, including the ``cycle`` and
``total``. Therefore it needs to count all elements.
The problem is, that this happens even if the iteration argument is
not specified leading to performance issues especially when iterating
over a (subset of a) lot of (remote) items.

This patch fixes this by adding a check for the ``iteration`` argument.

Fixes: FLOW-325

* Commit: `6daa28a <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/6daa28ae851ffce86807416a8bbae6317c8aade6>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Kickstart
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Party
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Welcome
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

